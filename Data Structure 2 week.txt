Data Structure 2 week
--------------------

Day 1 
------

1 => Bubble sort         :{complexity time n2 want 2 loops space O(1)}
2 => Insertion Sortk     :{complexity time n2 want 2 loops space O(1)} 
3 => Selection Sort      :{complexity n2 want 2 loops}

4 => quick Sort          :{complexity nlog(n) better than n2 } space compleixty n2 aavan patum 
*
5 => Merge Sort          :{complexity nlog(n)===O(nlog)n better than n2 space also equal } test and worst case nlogn aanu nammuk venemengil change cheyth n2 akkam 

=> complexity of merge sort {log(n)} like binary half half aakumbool ingane veenam


6 => Heap Sort           :{complexity nlog(n) better than n2   half cheyyumol anmmalk merge chyyanum oro log(n) complexity venam   }



Day 2
------

6 => Stack and Queue
  * Push ,pop ,display elments in a Stack  
  * Enqueue ,Dequeue , display elemnts in Queue 

Stack dataStructure
-------------------
=> stack antistructure thats sequential collection of elements thats forllows principle of Last in First out 
=> stack is abstract data type
=> stack contain 2 method 
  * push (add a new element to collection )
  * pop which removes the most recently added element from collention 
=> usage {undo, browser histery tracking }


Queue DataStructure
-------------------

The queue data Structur is a sequential collection of elemnts that follows the principle of First in First out 
the first element inserted into the queue is first element to be removed 
=> queue is an abstract data type  
=> queue support two main operations 
  * Enqueue ,Which adds an element to the rear/tail of the collection 
  * Dequeue ,which remeoves remove an element from the front/head of the collection 
-> queue usage {printers print multiple documents and Callback queue in js}


Day 3 
------

7 => Hash Table
  *{ hash table is costum data Structure also known as a hash mape this data structure used to store key value pairs }
* hash table il search and insertion  O(1) aanu complexity 
* we stored key value pairs in a fix sized array 
* so array have a numeeric index 
* How do we go from using string as ans index to number as an index
* The hash fuction accepts the string key and converts it into a hashcode using a defined logic and then maps 

=> 3 majer method in hash map
  * set to store key-value pair
  * get to retrieve a value given its key  

=> 
=> hash funcitons {hash functions are used for checking our data security
   first we want to creat a key for our data and stor when it comes back we check previos sended  key equal or not  }
  -> first we want to create a hash key value for eaxcn elemnts and find the total of that values =[name]=245 ithine nammak array length maayi % mood chiyya 
     ennitt kittunna positionil kondu pooyi vekkanam  after search cheyyumbool nammal direct vidunnilla athinte hash value eduthaan nammal search cheyyunnam
 {Applications all this covered }
=> hash table contain the any data type
=> apps{Database indexing chaches}
=> colletion in hash table that is {same  values {remainter % cheyth kittunnath } varumbool key vach aan access cheyya and we want to create a linked list for  fetching that data contain value and key ath noki key vach edukkum   }
=> insertion {O(1)}
=> deletion {O(1)}
=> travers  {O(n)}
=> init     {O(n)}


