Java Script
-----------


=> portals 
----------
-> it is a powerfull feature helps to  rendering the component outside of the parend hierarchy or that dom 
-> you can render the component in a different part of the dom 

=> contextApi vs Redux 
-> context is the way to pass the data through our component tree without having to pass  the props down manually at every level  :{small app ,mediium app}
-> Redux is a state management library that provides a state container for js apps  :{larger app  complex app }

=> dev tools :{userd to find the  real time error and devolopers what can do and not do  and through error 



=> bundlers
-----------
-> it is the a tool that take your code and that dependencies and bundle them to a single or few optimazed file for deployment 
-> they are essential part of modern development 
 * the webpack is a bundlers : that helps to compailation reduce the http response and code splitting and devserver ,reload lively dynaminc import 
=> Depp copy vs shallow copy
 
=> closure 
----------
=> oru new key word vech nammal oru function nammal oru varible vekkumpon oru puthiya copy athil keeri new instance create aavum 


=> jwt Authentication  

=> asymptotic notations : it is a technique used to describe the running time of an algorithm 

=> memory leak 
=> Recursion disadvantages  

=> we can not able to find the object length we want to find the key or values length


=> bitwise operator logical operator 


=> transpliters :{it is language compiler one to another  }
=> scratch.js : {visual programming language like a library  we can add the dynamic scratch card effects our web application 
  -> used to create animation and games }

=> let vs const :{}
=> object litarels : the object brase with properties that also known as 
-> template litarals : ~${}~


=> event propagation : motham concept like when you click a button 
=> event deligation  : 
=> event bubbling    :
=> event emmiter     : 


=> method chaining 
-----------------
-> oru method matoru method vilikkka 
-. 


Java Script array methods
-------------------------

=> arr.push            {arrayyil value keetan }
=> pop remove last element and return that element 
=> pop and shift return that element 
=> un shift to push first of array one or more 
=> concat 
=> slice cut cheyyan  {arr.slice(1,2)}
=> splice             {adding ,removing ,replacing }
=> map/reduce/filter
=> let add= arr.lenght{}
=> to string()
=> split()            {array bikadippikkan  } 
=> join()             {idayil varan }
=> arr.length         {not ()}
=> arr.flat()         {sub array ullathine flat aakum [sort cheyyan nalla suhama
=> new Set()          {it is a data structure  that represents a collection of uniqe values  }

=> heap memory        {it is the memory manage cheyyan veendi js nte }
=> garbage collection {it is builded in js engine its automaticaly understand the uselles memory in js code and retrive that  }
=> mark and sweep     {its a algorithm of working garbage collection uses  } 
=> heap Memory        {js ile data structures undakumbol athinte koode athinte memory create aavum athine its manage data structure memory  }
=> leak memory        {js code memory namakk mannually matan kazhiyilla because nallapole vrithik code ezhuthi memory leak kurakkaan noka kore code nokatehezhuthiyal memory consumption koodum angane garbage collection koodum 
-> unproper handiling closure ,event listeners , or large data structures in node js    }

=> getter and setter  {it is controle access to object propertys get retrive cheyyan set change and make }
=> named exports      {its use for reuseable and organazed and maintanable  code undakan} 
=> quary selectors    {it is the selecte and manipulate a elements use DOM manipulation like ./#/}
=> imperative programming  {its programing paradigm oru preticular reethiyloode nammale program konde poga }
=> promis.all         {oru arry or string edukkunnu prommise fullfilled aayathe matram edukkunnu rejecte aayi kazhinjal appo thanne rejecte adikkum ellam }
=> Promis.rice        {first kanunna resolve or rejecte eduth  tharum }
=> promise.any    
-> promse.allsettled :      {its return fulfilled a new promise return cheyyun athava rejecterd aayaal aggregate Error adikum }
=> ajax               {ajax serverk asyncronous request kodukkanum update cheyyanum part 
                       -> ithe oru web page full edukkilla kurach vech matam }
=> decimals number and non decimal nmber 3.14 and 3 

=> String methods 
-----------------
-> text.charAt(0) : it will print the character of that position 
-> text.charCodeAt(0) : print the charCode of the  
-> text.at(0)  : print also the first position 
-> slice(0,10) : it is a string method and it will return value ill  0-10 positions 
-> substring also == slice(0
=> if you need eny inetex without the loop from the string : text.indexOf('word')
=> incluede
=> text.endWith(saleel) 
=> text.staratWith('hello)


functions
---------
=> function hoisting : {the function called before they initialized }
=> self invoke : function call with  ()  / Function expressions will execute automatically if the expression is followed by ().
=> return argument.length : I will return the number of arguments which given 



js datastructure method 
-----------------------
=> new Map(){like  objecte but its key-value pairs oru key vach nammak uniqe aaya thine vilikkam} 
=> new Set()
=> has()
=> delete()
=> size()
=> use for of loop and forEach 
=> super key word{its used for access and invoke the parant properties like                                                      function and constructur to sub classes}
=> factory functions {its return an objecte or objecte litaral and its easialy maintain with privet variables and clousures and maintain encapsulation }
=> map and flat map (){ both are used to create manipulate data  like as same but flate map used to }


Js json methods 
---------------
parse(){json string to js object }
stringify(){js object to json string }

Java script math methods
------------------------
=> Math.round(variable)
=> Math.floor()
=> Math.ciel()
=> Math.sign(){negative or positive}
=> Math.PI [3.141592843748]

=> IIFE 
-------
=> its expressions that is executed immediately after it is defined 
-> its create a private environment and new scope to encapsulate variables avoid the namespace 

=> factory functions 
--------------------
-> return the object 
-> often used to create a multiple instance of similar objects without using classes 

=> generator function
---------------------
-> the special type of functions we can pause and execution and yield multiple values 
-> useful for asynchronous operations 



 js array Methods 
-----------------
=> constructor : return the array prototype function 

=> array.entries() : {ithuvilichal we will get a each elements I a array ,like {3,'saleel} 
=> Object.fromEntries : vilichaal nammak aarray direct object aakam 
=> array.fill(;{ we can add elements to array : value,start,end}
=> 

























